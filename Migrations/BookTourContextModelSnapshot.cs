// <auto-generated />
using System;
using BookTour.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookTour.Migrations
{
    [DbContext(typeof(BookTourContext))]
    partial class BookTourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookTour.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int>("AdultCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChildCount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TourDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BookTour.Models.BookingDetail", b =>
                {
                    b.Property<int>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingDetailId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassengerType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingDetailId");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("BookTour.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Hà Nội",
                            Description = "Thủ đô của Việt Nam, nơi hội tụ văn hóa ngàn năm văn hiến với nhiều di tích lịch sử và danh lam thắng cảnh nổi tiếng.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Hồ Chí Minh",
                            Description = "Thành phố năng động nhất Việt Nam, trung tâm kinh tế, văn hóa và giáo dục lớn của cả nước.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Đà Nẵng",
                            Description = "Thành phố biển xinh đẹp với bãi biển Mỹ Khê nổi tiếng và cầu Rồng biểu tượng.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Huế",
                            Description = "Cố đô của Việt Nam với hệ thống di tích cố đô Huế được UNESCO công nhận là Di sản Văn hóa Thế giới.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Nha Trang",
                            Description = "Thành phố biển nổi tiếng với những bãi biển đẹp, hoạt động du lịch sôi động và ẩm thực hải sản phong phú.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Sapa",
                            Description = "Thị trấn trong sương mù, nổi tiếng với những thửa ruộng bậc thang và văn hóa đặc sắc của các dân tộc thiểu số.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "Hạ Long",
                            Description = "Nổi tiếng với Vịnh Hạ Long - một trong 7 kỳ quan thiên nhiên mới của thế giới.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "Hội An",
                            Description = "Phố cổ Hội An - Di sản Văn hóa Thế giới với kiến trúc cổ kính và những chiếc đèn lồng đầy màu sắc.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 9,
                            CityName = "Đà Lạt",
                            Description = "Thành phố ngàn hoa, thành phố sương mù với khí hậu mát mẻ quanh năm.",
                            IsActive = true
                        },
                        new
                        {
                            CityId = 10,
                            CityName = "Phú Quốc",
                            Description = "Hòn đảo lớn nhất Việt Nam với những bãi biển hoang sơ và nước biển trong xanh.",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BookTour.Models.CustomTour", b =>
                {
                    b.Property<int>("CustomTourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomTourId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EstimatedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomTourId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomTours");
                });

            modelBuilder.Entity("BookTour.Models.CustomTourDestination", b =>
                {
                    b.Property<int>("CustomDestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomDestinationId"));

                    b.Property<int>("CustomTourId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomDestinationId");

                    b.HasIndex("CustomTourId");

                    b.HasIndex("DestinationId");

                    b.ToTable("CustomTourDestinations");
                });

            modelBuilder.Entity("BookTour.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.HasKey("DestinationId");

                    b.HasIndex("CityId");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            DestinationId = 1,
                            CityId = 1,
                            Description = "Biểu tượng của Thủ đô, nơi lưu giữ truyền thuyết về Rùa thần và gươm báu.",
                            DestinationName = "Hồ Gươm",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 2,
                            CityId = 1,
                            Description = "Di tích lịch sử văn hóa, nơi thờ Khổng Tử và các bậc hiền triết, trường đại học đầu tiên của Việt Nam.",
                            DestinationName = "Văn Miếu - Quốc Tử Giám",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 3,
                            CityId = 1,
                            Description = "Công trình lịch sử văn hóa đặc biệt, nơi lưu giữ thi hài của Chủ tịch Hồ Chí Minh.",
                            DestinationName = "Lăng Chủ tịch Hồ Chí Minh",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 4,
                            CityId = 1,
                            Description = "Khu phố cổ với 36 phố phường, mang đậm bản sắc văn hóa Hà Nội truyền thống.",
                            DestinationName = "Phố cổ Hà Nội",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 5,
                            CityId = 1,
                            Description = "Di sản văn hóa thế giới, minh chứng cho lịch sử ngàn năm văn hiến của Thăng Long - Hà Nội.",
                            DestinationName = "Hoàng thành Thăng Long",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 6,
                            CityId = 1,
                            Description = "Công trình kiến trúc theo phong cách Pháp, biểu tượng của Hà Nội hiện đại.",
                            DestinationName = "Nhà hát Lớn Hà Nội",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 7,
                            CityId = 1,
                            Description = "Cây cầu lịch sử bắc qua sông Hồng, chứng nhân lịch sử của Hà Nội.",
                            DestinationName = "Cầu Long Biên",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 8,
                            CityId = 1,
                            Description = "Công viên và vườn thú lớn của Hà Nội, điểm vui chơi giải trí cho mọi lứa tuổi.",
                            DestinationName = "Công viên Thủ Lệ",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 9,
                            CityId = 1,
                            Description = "Hồ nước ngọt tự nhiên lớn nhất Hà Nội, nơi có nhiều đền chùa và cảnh đẹp.",
                            DestinationName = "Hồ Tây",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 10,
                            CityId = 2,
                            Description = "Công trình kiến trúc Gothic nổi tiếng, được xây dựng vào cuối thế kỷ 19.",
                            DestinationName = "Nhà thờ Đức Bà",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 11,
                            CityId = 2,
                            Description = "Công trình kiến trúc cổ điển Pháp, một trong những công trình lâu đời nhất ở Sài Gòn.",
                            DestinationName = "Bưu điện Trung tâm Sài Gòn",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 12,
                            CityId = 2,
                            Description = "Khu chợ nổi tiếng và lâu đời nhất Sài Gòn, biểu tượng của thành phố.",
                            DestinationName = "Chợ Bến Thành",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 13,
                            CityId = 2,
                            Description = "Công trình lịch sử gắn liền với sự kiện thống nhất đất nước.",
                            DestinationName = "Dinh Độc Lập",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 14,
                            CityId = 2,
                            Description = "Khu phố đi bộ sầm uất và hiện đại nhất thành phố.",
                            DestinationName = "Phố đi bộ Nguyễn Huệ",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 15,
                            CityId = 3,
                            Description = "Khu du lịch nổi tiếng với Cầu Vàng và nhiều công trình kiến trúc độc đáo.",
                            DestinationName = "Bà Nà Hills",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 16,
                            CityId = 3,
                            Description = "Một trong những bãi biển đẹp nhất hành tinh với cát trắng mịn và nước biển trong xanh.",
                            DestinationName = "Bãi biển Mỹ Khê",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 17,
                            CityId = 3,
                            Description = "Biểu tượng của thành phố Đà Nẵng, cây cầu có thể phun lửa và nước vào cuối tuần.",
                            DestinationName = "Cầu Rồng",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 18,
                            CityId = 3,
                            Description = "Danh thắng nổi tiếng với năm ngọn núi đá vôi và nhiều hang động, chùa chiền.",
                            DestinationName = "Ngũ Hành Sơn",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 19,
                            CityId = 3,
                            Description = "Khu bảo tồn thiên nhiên với rừng nguyên sinh và bãi biển hoang sơ.",
                            DestinationName = "Bán đảo Sơn Trà",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 20,
                            CityId = 4,
                            Description = "Quần thể di tích cung đình triều Nguyễn, nơi sinh sống và làm việc của 13 vị vua triều Nguyễn.",
                            DestinationName = "Đại Nội Huế",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 21,
                            CityId = 4,
                            Description = "Ngôi chùa cổ nhất Huế với tháp Phước Duyên 7 tầng nổi tiếng.",
                            DestinationName = "Chùa Thiên Mụ",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 22,
                            CityId = 4,
                            Description = "Công trình kiến trúc đẹp nhất trong các lăng tẩm ở Huế.",
                            DestinationName = "Lăng Tự Đức",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 23,
                            CityId = 4,
                            Description = "Lăng tẩm có kiến trúc độc đáo, kết hợp giữa phương Đông và phương Tây.",
                            DestinationName = "Lăng Khải Định",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 24,
                            CityId = 4,
                            Description = "Dòng sông thơ mộng chảy qua thành phố Huế, gắn liền với văn hóa và lịch sử Huế.",
                            DestinationName = "Sông Hương",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 25,
                            CityId = 5,
                            Description = "Khu du lịch giải trí hiện đại với nhiều trò chơi hấp dẫn và bãi biển riêng.",
                            DestinationName = "Vinpearl Land",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 26,
                            CityId = 5,
                            Description = "Một trong 29 vịnh đẹp nhất thế giới với làn nước trong xanh và nhiều đảo nhỏ.",
                            DestinationName = "Vịnh Nha Trang",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 27,
                            CityId = 5,
                            Description = "Di tích lịch sử văn hóa với kiến trúc độc đáo của vương quốc Chăm Pa cổ.",
                            DestinationName = "Tháp Bà Ponagar",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 28,
                            CityId = 5,
                            Description = "Thắng cảnh thiên nhiên với những khối đá chồng lên nhau độc đáo.",
                            DestinationName = "Hòn Chồng",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 29,
                            CityId = 5,
                            Description = "Bãi biển hoang sơ với cát trắng mịn và nước biển trong xanh.",
                            DestinationName = "Bãi biển Dốc Lết",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 30,
                            CityId = 6,
                            Description = "Nóc nhà Đông Dương với độ cao 3.143m, nơi có hệ sinh thái đa dạng.",
                            DestinationName = "Fansipan",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 31,
                            CityId = 6,
                            Description = "Bản làng cổ của người H'Mông với nét văn hóa đặc sắc và thác nước tuyệt đẹp.",
                            DestinationName = "Bản Cát Cát",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 32,
                            CityId = 6,
                            Description = "Thung lũng xinh đẹp với những thửa ruộng bậc thang tuyệt đẹp.",
                            DestinationName = "Thung lũng Mường Hoa",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 33,
                            CityId = 6,
                            Description = "Bản làng của người Dao Đỏ với nghề dệt vải và thêu thùa truyền thống.",
                            DestinationName = "Bản Tả Phìn",
                            IsActive = true,
                            IsFeatured = true
                        },
                        new
                        {
                            DestinationId = 34,
                            CityId = 6,
                            Description = "Điểm ngắm cảnh tuyệt đẹp với tầm nhìn bao quát toàn bộ thung lũng Mường Hoa.",
                            DestinationName = "Cổng Trời",
                            IsActive = true,
                            IsFeatured = true
                        });
                });

            modelBuilder.Entity("BookTour.Models.DestinationDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("FeatureType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FeatureValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DetailId");

                    b.HasIndex("DestinationId");

                    b.ToTable("DestinationDetails");

                    b.HasData(
                        new
                        {
                            DetailId = 1,
                            DestinationId = 1,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "24/7"
                        },
                        new
                        {
                            DetailId = 2,
                            DestinationId = 1,
                            FeatureType = "Giá vé",
                            FeatureValue = "Miễn phí"
                        },
                        new
                        {
                            DetailId = 3,
                            DestinationId = 1,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "Quận Hoàn Kiếm, Hà Nội"
                        },
                        new
                        {
                            DetailId = 4,
                            DestinationId = 2,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "8:00 - 17:00"
                        },
                        new
                        {
                            DetailId = 5,
                            DestinationId = 2,
                            FeatureType = "Giá vé",
                            FeatureValue = "30.000 VND"
                        },
                        new
                        {
                            DetailId = 6,
                            DestinationId = 2,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "58 Quốc Tử Giám, Đống Đa, Hà Nội"
                        },
                        new
                        {
                            DetailId = 7,
                            DestinationId = 15,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "7:30 - 21:30"
                        },
                        new
                        {
                            DetailId = 8,
                            DestinationId = 15,
                            FeatureType = "Giá vé",
                            FeatureValue = "750.000 VND"
                        },
                        new
                        {
                            DetailId = 9,
                            DestinationId = 15,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "Hoà Ninh, Hoà Vang, Đà Nẵng"
                        },
                        new
                        {
                            DetailId = 10,
                            DestinationId = 20,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "7:00 - 17:30"
                        },
                        new
                        {
                            DetailId = 11,
                            DestinationId = 20,
                            FeatureType = "Giá vé",
                            FeatureValue = "200.000 VND"
                        },
                        new
                        {
                            DetailId = 12,
                            DestinationId = 20,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "Thành phố Huế, Thừa Thiên Huế"
                        },
                        new
                        {
                            DetailId = 13,
                            DestinationId = 25,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "8:30 - 21:00"
                        },
                        new
                        {
                            DetailId = 14,
                            DestinationId = 25,
                            FeatureType = "Giá vé",
                            FeatureValue = "880.000 VND"
                        },
                        new
                        {
                            DetailId = 15,
                            DestinationId = 25,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "Đảo Hòn Tre, Nha Trang, Khánh Hòa"
                        },
                        new
                        {
                            DetailId = 16,
                            DestinationId = 10,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "8:00 - 17:00"
                        },
                        new
                        {
                            DetailId = 17,
                            DestinationId = 10,
                            FeatureType = "Giá vé",
                            FeatureValue = "Miễn phí"
                        },
                        new
                        {
                            DetailId = 18,
                            DestinationId = 10,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "Công xã Paris, Bến Nghé, Quận 1, TP.HCM"
                        },
                        new
                        {
                            DetailId = 19,
                            DestinationId = 30,
                            FeatureType = "Giờ mở cửa",
                            FeatureValue = "7:30 - 17:30"
                        },
                        new
                        {
                            DetailId = 20,
                            DestinationId = 30,
                            FeatureType = "Giá vé",
                            FeatureValue = "700.000 VND"
                        },
                        new
                        {
                            DetailId = 21,
                            DestinationId = 30,
                            FeatureType = "Địa chỉ",
                            FeatureValue = "Thị trấn Sa Pa, Lào Cai"
                        });
                });

            modelBuilder.Entity("BookTour.Models.DestinationImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.HasKey("ImageId");

                    b.HasIndex("DestinationId");

                    b.ToTable("DestinationImages");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            DestinationId = 1,
                            ImageUrl = "/images/destinations/hanoi/ho-guom-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 2,
                            DestinationId = 1,
                            ImageUrl = "/images/destinations/hanoi/ho-guom-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 3,
                            DestinationId = 2,
                            ImageUrl = "/images/destinations/hanoi/van-mieu-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 4,
                            DestinationId = 2,
                            ImageUrl = "/images/destinations/hanoi/van-mieu-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 5,
                            DestinationId = 3,
                            ImageUrl = "/images/destinations/hanoi/lang-chu-tich-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 6,
                            DestinationId = 3,
                            ImageUrl = "/images/destinations/hanoi/lang-chu-tich-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 7,
                            DestinationId = 4,
                            ImageUrl = "/images/destinations/hanoi/pho-co-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 8,
                            DestinationId = 4,
                            ImageUrl = "/images/destinations/hanoi/pho-co-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 9,
                            DestinationId = 5,
                            ImageUrl = "/images/destinations/hanoi/hoang-thanh-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 10,
                            DestinationId = 5,
                            ImageUrl = "/images/destinations/hanoi/hoang-thanh-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 11,
                            DestinationId = 15,
                            ImageUrl = "/images/destinations/danang/ba-na-hills-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 12,
                            DestinationId = 15,
                            ImageUrl = "/images/destinations/danang/ba-na-hills-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 13,
                            DestinationId = 16,
                            ImageUrl = "/images/destinations/danang/my-khe-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 14,
                            DestinationId = 16,
                            ImageUrl = "/images/destinations/danang/my-khe-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 15,
                            DestinationId = 20,
                            ImageUrl = "/images/destinations/hue/dai-noi-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 16,
                            DestinationId = 20,
                            ImageUrl = "/images/destinations/hue/dai-noi-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 17,
                            DestinationId = 25,
                            ImageUrl = "/images/destinations/nhatrang/vinpearl-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 18,
                            DestinationId = 25,
                            ImageUrl = "/images/destinations/nhatrang/vinpearl-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 19,
                            DestinationId = 10,
                            ImageUrl = "/images/destinations/hochiminh/notre-dame-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 20,
                            DestinationId = 10,
                            ImageUrl = "/images/destinations/hochiminh/notre-dame-2.jpg",
                            IsPrimary = false
                        },
                        new
                        {
                            ImageId = 21,
                            DestinationId = 30,
                            ImageUrl = "/images/destinations/sapa/fansipan-1.jpg",
                            IsPrimary = true
                        },
                        new
                        {
                            ImageId = 22,
                            DestinationId = 30,
                            ImageUrl = "/images/destinations/sapa/fansipan-2.jpg",
                            IsPrimary = false
                        });
                });

            modelBuilder.Entity("BookTour.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comment = "Tour rất tuyệt vời, hướng dẫn viên nhiệt tình, các điểm tham quan đều rất đẹp!",
                            Rating = 5,
                            ReviewDate = new DateTime(2025, 4, 12, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(5199),
                            TourId = 1,
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            Comment = "Tôi rất hài lòng với chuyến đi này, chỉ tiếc là thời gian hơi ngắn.",
                            Rating = 4,
                            ReviewDate = new DateTime(2025, 4, 7, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(5208),
                            TourId = 1,
                            UserId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            Comment = "Đà Nẵng quá đẹp, đặc biệt là Bà Nà Hills và Cầu Vàng. Sẽ quay lại lần nữa!",
                            Rating = 5,
                            ReviewDate = new DateTime(2025, 4, 10, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(5210),
                            TourId = 2,
                            UserId = 3
                        },
                        new
                        {
                            ReviewId = 4,
                            Comment = "Tour được tổ chức rất chuyên nghiệp, hướng dẫn viên vui tính và am hiểu lịch sử.",
                            Rating = 4,
                            ReviewDate = new DateTime(2025, 4, 2, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(5211),
                            TourId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ReviewId = 5,
                            Comment = "Huế có quá nhiều di tích lịch sử đẹp, ẩm thực cũng rất ngon. Rất đáng để đi!",
                            Rating = 5,
                            ReviewDate = new DateTime(2025, 4, 9, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(5213),
                            TourId = 3,
                            UserId = 5
                        },
                        new
                        {
                            ReviewId = 6,
                            Comment = "Tour được tổ chức tốt, chỉ tiếc là thời tiết không ủng hộ.",
                            Rating = 4,
                            ReviewDate = new DateTime(2025, 3, 28, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(5215),
                            TourId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BookTour.Models.SavedTour", b =>
                {
                    b.Property<int>("SavedTourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SavedTourId"));

                    b.Property<DateTime>("SavedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SavedTourId");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("SavedTours");
                });

            modelBuilder.Entity("BookTour.Models.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"));

                    b.Property<decimal>("AdultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChildPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TourId");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            TourId = 1,
                            AdultPrice = 4990000m,
                            ChildPrice = 4990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4920),
                            Description = "Khám phá vẻ đẹp của Hà Nội với tour trọn gói. Tham quan các địa điểm nổi tiếng như Hồ Gươm, Văn Miếu, Hoàng thành Thăng Long và trải nghiệm văn hóa ẩm thực đường phố Hà Nội.",
                            Duration = 3,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Hà Nội",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4921)
                        },
                        new
                        {
                            TourId = 2,
                            AdultPrice = 5990000m,
                            ChildPrice = 5990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4924),
                            Description = "Khám phá vẻ đẹp của Đà Nẵng với tour trọn gói. Tham quan Bà Nà Hills, Cầu Rồng, bãi biển Mỹ Khê và Ngũ Hành Sơn. Trải nghiệm ẩm thực đặc sắc của miền Trung.",
                            Duration = 4,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Đà Nẵng",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4924)
                        },
                        new
                        {
                            TourId = 3,
                            AdultPrice = 3990000m,
                            ChildPrice = 3990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4927),
                            Description = "Khám phá vẻ đẹp của Huế với tour trọn gói. Tham quan Đại Nội, các lăng tẩm vua Nguyễn, chùa Thiên Mụ và thưởng thức ẩm thực cung đình Huế.",
                            Duration = 2,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Huế",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4927)
                        },
                        new
                        {
                            TourId = 4,
                            AdultPrice = 6990000m,
                            ChildPrice = 6990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4930),
                            Description = "Khám phá vẻ đẹp của Nha Trang với tour trọn gói. Tham quan Vinpearl Land, vịnh Nha Trang, Tháp Bà Ponagar và tắm biển tại các bãi biển đẹp nhất Nha Trang.",
                            Duration = 5,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Nha Trang",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4930)
                        },
                        new
                        {
                            TourId = 5,
                            AdultPrice = 5500000m,
                            ChildPrice = 4500000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4933),
                            Description = "Khám phá vẻ đẹp của Hồ Chí Minh với tour trọn gói. Tham quan Nhà thờ Đức Bà, Bưu điện Trung tâm, Chợ Bến Thành, Dinh Độc Lập và trải nghiệm cuộc sống sôi động của thành phố.",
                            Duration = 3,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Hồ Chí Minh",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4933)
                        },
                        new
                        {
                            TourId = 6,
                            AdultPrice = 5990000m,
                            ChildPrice = 4990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4936),
                            Description = "Khám phá vẻ đẹp của Sapa với tour trọn gói. Chinh phục Fansipan, tham quan các bản làng dân tộc, ngắm ruộng bậc thang và trải nghiệm văn hóa vùng cao.",
                            Duration = 4,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Sapa",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4936)
                        },
                        new
                        {
                            TourId = 7,
                            AdultPrice = 5990000m,
                            ChildPrice = 4990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4939),
                            Description = "Khám phá vẻ đẹp của Vịnh Hạ Long với tour trọn gói. Tham quan các hang động, đảo đá và trải nghiệm đêm trên vịnh Hạ Long.",
                            Duration = 3,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Hạ Long",
                            Transportation = "Xe du lịch + Tàu",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4939)
                        },
                        new
                        {
                            TourId = 8,
                            AdultPrice = 3990000m,
                            ChildPrice = 3490000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4942),
                            Description = "Khám phá vẻ đẹp của Hội An với tour trọn gói. Tham quan phố cổ, làng nghề truyền thống và trải nghiệm không khí cổ kính của Hội An.",
                            Duration = 2,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Hội An",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4943)
                        },
                        new
                        {
                            TourId = 9,
                            AdultPrice = 5490000m,
                            ChildPrice = 4490000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4945),
                            Description = "Khám phá vẻ đẹp của Đà Lạt với tour trọn gói. Tham quan các điểm du lịch nổi tiếng và trải nghiệm khí hậu mát mẻ của thành phố ngàn hoa.",
                            Duration = 4,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Đà Lạt",
                            Transportation = "Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4945)
                        },
                        new
                        {
                            TourId = 10,
                            AdultPrice = 8990000m,
                            ChildPrice = 7990000m,
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4948),
                            Description = "Khám phá vẻ đẹp của Phú Quốc với tour trọn gói. Tham quan các bãi biển đẹp, làng chài và trải nghiệm hoạt động lặn biển ngắm san hô.",
                            Duration = 5,
                            IsActive = true,
                            IsFeatured = true,
                            TourName = "Tour Phú Quốc",
                            Transportation = "Máy bay + Xe du lịch",
                            UpdatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4948)
                        });
                });

            modelBuilder.Entity("BookTour.Models.TourDestination", b =>
                {
                    b.Property<int>("TourDestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourDestinationId"));

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("TourDestinationId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("TourId");

                    b.ToTable("TourDestinations");

                    b.HasData(
                        new
                        {
                            TourDestinationId = 1,
                            DestinationId = 1,
                            OrderNumber = 1,
                            TourId = 1
                        },
                        new
                        {
                            TourDestinationId = 2,
                            DestinationId = 2,
                            OrderNumber = 2,
                            TourId = 1
                        },
                        new
                        {
                            TourDestinationId = 3,
                            DestinationId = 5,
                            OrderNumber = 3,
                            TourId = 1
                        },
                        new
                        {
                            TourDestinationId = 4,
                            DestinationId = 15,
                            OrderNumber = 1,
                            TourId = 2
                        },
                        new
                        {
                            TourDestinationId = 5,
                            DestinationId = 16,
                            OrderNumber = 2,
                            TourId = 2
                        },
                        new
                        {
                            TourDestinationId = 6,
                            DestinationId = 17,
                            OrderNumber = 3,
                            TourId = 2
                        },
                        new
                        {
                            TourDestinationId = 7,
                            DestinationId = 18,
                            OrderNumber = 4,
                            TourId = 2
                        },
                        new
                        {
                            TourDestinationId = 8,
                            DestinationId = 20,
                            OrderNumber = 1,
                            TourId = 3
                        },
                        new
                        {
                            TourDestinationId = 9,
                            DestinationId = 21,
                            OrderNumber = 2,
                            TourId = 3
                        },
                        new
                        {
                            TourDestinationId = 10,
                            DestinationId = 22,
                            OrderNumber = 3,
                            TourId = 3
                        },
                        new
                        {
                            TourDestinationId = 11,
                            DestinationId = 25,
                            OrderNumber = 1,
                            TourId = 4
                        },
                        new
                        {
                            TourDestinationId = 12,
                            DestinationId = 26,
                            OrderNumber = 2,
                            TourId = 4
                        },
                        new
                        {
                            TourDestinationId = 13,
                            DestinationId = 27,
                            OrderNumber = 3,
                            TourId = 4
                        },
                        new
                        {
                            TourDestinationId = 14,
                            DestinationId = 10,
                            OrderNumber = 1,
                            TourId = 5
                        },
                        new
                        {
                            TourDestinationId = 15,
                            DestinationId = 11,
                            OrderNumber = 2,
                            TourId = 5
                        },
                        new
                        {
                            TourDestinationId = 16,
                            DestinationId = 12,
                            OrderNumber = 3,
                            TourId = 5
                        },
                        new
                        {
                            TourDestinationId = 17,
                            DestinationId = 13,
                            OrderNumber = 4,
                            TourId = 5
                        },
                        new
                        {
                            TourDestinationId = 18,
                            DestinationId = 30,
                            OrderNumber = 1,
                            TourId = 6
                        },
                        new
                        {
                            TourDestinationId = 19,
                            DestinationId = 31,
                            OrderNumber = 2,
                            TourId = 6
                        },
                        new
                        {
                            TourDestinationId = 20,
                            DestinationId = 32,
                            OrderNumber = 3,
                            TourId = 6
                        });
                });

            modelBuilder.Entity("BookTour.Models.TourImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("TourId");

                    b.ToTable("TourImages");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            ImageUrl = "/images/tours/hanoi/hanoi-main.jpg",
                            IsPrimary = true,
                            TourId = 1
                        },
                        new
                        {
                            ImageId = 2,
                            ImageUrl = "/images/tours/hanoi/ho-guom.jpg",
                            IsPrimary = false,
                            TourId = 1
                        },
                        new
                        {
                            ImageId = 3,
                            ImageUrl = "/images/tours/hanoi/van-mieu.jpg",
                            IsPrimary = false,
                            TourId = 1
                        },
                        new
                        {
                            ImageId = 4,
                            ImageUrl = "/images/tours/hanoi/hoang-thanh.jpg",
                            IsPrimary = false,
                            TourId = 1
                        },
                        new
                        {
                            ImageId = 5,
                            ImageUrl = "/images/tours/danang/danang-main.jpg",
                            IsPrimary = true,
                            TourId = 2
                        },
                        new
                        {
                            ImageId = 6,
                            ImageUrl = "/images/tours/danang/ba-na-hills.jpg",
                            IsPrimary = false,
                            TourId = 2
                        },
                        new
                        {
                            ImageId = 7,
                            ImageUrl = "/images/tours/danang/my-khe-beach.jpg",
                            IsPrimary = false,
                            TourId = 2
                        },
                        new
                        {
                            ImageId = 8,
                            ImageUrl = "/images/tours/danang/dragon-bridge.jpg",
                            IsPrimary = false,
                            TourId = 2
                        },
                        new
                        {
                            ImageId = 9,
                            ImageUrl = "/images/tours/hue/hue-main.jpg",
                            IsPrimary = true,
                            TourId = 3
                        },
                        new
                        {
                            ImageId = 10,
                            ImageUrl = "/images/tours/hue/dai-noi.jpg",
                            IsPrimary = false,
                            TourId = 3
                        },
                        new
                        {
                            ImageId = 11,
                            ImageUrl = "/images/tours/hue/thien-mu.jpg",
                            IsPrimary = false,
                            TourId = 3
                        },
                        new
                        {
                            ImageId = 12,
                            ImageUrl = "/images/tours/hue/tu-duc-tomb.jpg",
                            IsPrimary = false,
                            TourId = 3
                        },
                        new
                        {
                            ImageId = 13,
                            ImageUrl = "/images/tours/nhatrang/nhatrang-main.jpg",
                            IsPrimary = true,
                            TourId = 4
                        },
                        new
                        {
                            ImageId = 14,
                            ImageUrl = "/images/tours/nhatrang/vinpearl.jpg",
                            IsPrimary = false,
                            TourId = 4
                        },
                        new
                        {
                            ImageId = 15,
                            ImageUrl = "/images/tours/nhatrang/nhatrang-bay.jpg",
                            IsPrimary = false,
                            TourId = 4
                        },
                        new
                        {
                            ImageId = 16,
                            ImageUrl = "/images/tours/nhatrang/ponagar.jpg",
                            IsPrimary = false,
                            TourId = 4
                        },
                        new
                        {
                            ImageId = 17,
                            ImageUrl = "/images/tours/hochiminh/hochiminh-main.jpg",
                            IsPrimary = true,
                            TourId = 5
                        },
                        new
                        {
                            ImageId = 18,
                            ImageUrl = "/images/tours/hochiminh/notre-dame.jpg",
                            IsPrimary = false,
                            TourId = 5
                        },
                        new
                        {
                            ImageId = 19,
                            ImageUrl = "/images/tours/hochiminh/central-post-office.jpg",
                            IsPrimary = false,
                            TourId = 5
                        },
                        new
                        {
                            ImageId = 20,
                            ImageUrl = "/images/tours/hochiminh/ben-thanh-market.jpg",
                            IsPrimary = false,
                            TourId = 5
                        },
                        new
                        {
                            ImageId = 21,
                            ImageUrl = "/images/tours/sapa/sapa-main.jpg",
                            IsPrimary = true,
                            TourId = 6
                        },
                        new
                        {
                            ImageId = 22,
                            ImageUrl = "/images/tours/sapa/fansipan.jpg",
                            IsPrimary = false,
                            TourId = 6
                        },
                        new
                        {
                            ImageId = 23,
                            ImageUrl = "/images/tours/sapa/cat-cat-village.jpg",
                            IsPrimary = false,
                            TourId = 6
                        },
                        new
                        {
                            ImageId = 24,
                            ImageUrl = "/images/tours/sapa/muong-hoa-valley.jpg",
                            IsPrimary = false,
                            TourId = 6
                        });
                });

            modelBuilder.Entity("BookTour.Models.TourSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("Activities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.HasIndex("TourId");

                    b.ToTable("TourSchedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            Activities = "Sáng: Tham quan Hồ Gươm, Đền Ngọc Sơn\nTrưa: Ăn trưa tại nhà hàng địa phương\nChiều: Tham quan phố cổ Hà Nội\nTối: Thưởng thức ẩm thực đường phố",
                            DayNumber = 1,
                            Description = "Ngày 1: Khám phá trung tâm Hà Nội",
                            TourId = 1
                        },
                        new
                        {
                            ScheduleId = 2,
                            Activities = "Sáng: Tham quan Văn Miếu - Quốc Tử Giám\nTrưa: Ăn trưa tại nhà hàng địa phương\nChiều: Tham quan Hoàng thành Thăng Long\nTối: Xem biểu diễn múa rối nước",
                            DayNumber = 2,
                            Description = "Ngày 2: Di sản văn hóa Hà Nội",
                            TourId = 1
                        },
                        new
                        {
                            ScheduleId = 3,
                            Activities = "Sáng: Tham quan Lăng Chủ tịch Hồ Chí Minh\nTrưa: Ăn trưa tại nhà hàng địa phương\nChiều: Mua sắm tại các trung tâm thương mại\nTối: Tiệc chia tay",
                            DayNumber = 3,
                            Description = "Ngày 3: Hà Nội hiện đại",
                            TourId = 1
                        },
                        new
                        {
                            ScheduleId = 4,
                            Activities = "Sáng: Khởi hành đi Bà Nà Hills\nTrưa: Ăn trưa tại Bà Nà Hills\nChiều: Tham quan Cầu Vàng, làng Pháp\nTối: Về khách sạn nghỉ ngơi",
                            DayNumber = 1,
                            Description = "Ngày 1: Khám phá Bà Nà Hills",
                            TourId = 2
                        },
                        new
                        {
                            ScheduleId = 5,
                            Activities = "Sáng: Tham quan Ngũ Hành Sơn\nTrưa: Ăn trưa tại nhà hàng địa phương\nChiều: Tham quan làng đá Non Nước\nTối: Thưởng thức ẩm thực địa phương",
                            DayNumber = 2,
                            Description = "Ngày 2: Khám phá Ngũ Hành Sơn",
                            TourId = 2
                        },
                        new
                        {
                            ScheduleId = 6,
                            Activities = "Sáng: Tham quan bán đảo Sơn Trà\nTrưa: Ăn trưa tại nhà hàng địa phương\nChiều: Tham quan chùa Linh Ứng\nTối: Thưởng thức hải sản tươi ngon",
                            DayNumber = 3,
                            Description = "Ngày 3: Khám phá bán đảo Sơn Trà",
                            TourId = 2
                        },
                        new
                        {
                            ScheduleId = 7,
                            Activities = "Sáng: Tắm biển Mỹ Khê\nTrưa: Ăn trưa tại nhà hàng ven biển\nChiều: Tham quan Cầu Rồng\nTối: Ngắm Cầu Rồng phun lửa và nước",
                            DayNumber = 4,
                            Description = "Ngày 4: Tắm biển Mỹ Khê",
                            TourId = 2
                        },
                        new
                        {
                            ScheduleId = 8,
                            Activities = "Sáng: Tham quan Đại Nội Huế\nTrưa: Ăn trưa với ẩm thực cung đình\nChiều: Tham quan Bảo tàng Cổ vật Cung đình Huế\nTối: Thưởng thức ca Huế trên sông Hương",
                            DayNumber = 1,
                            Description = "Ngày 1: Khám phá Đại Nội Huế",
                            TourId = 3
                        },
                        new
                        {
                            ScheduleId = 9,
                            Activities = "Sáng: Tham quan Lăng Tự Đức và Lăng Khải Định\nTrưa: Ăn trưa tại nhà hàng địa phương\nChiều: Tham quan chùa Thiên Mụ\nTối: Thưởng thức ẩm thực Huế",
                            DayNumber = 2,
                            Description = "Ngày 2: Tham quan các lăng tẩm",
                            TourId = 3
                        });
                });

            modelBuilder.Entity("BookTour.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Hà Nội",
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4650),
                            Email = "user1@example.com",
                            FullName = "Nguyễn Văn A",
                            Password = "hashed_password_here",
                            Phone = "0901234567",
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Hồ Chí Minh",
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4653),
                            Email = "user2@example.com",
                            FullName = "Trần Thị B",
                            Password = "hashed_password_here",
                            Phone = "0901234568",
                            Username = "user2"
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Đà Nẵng",
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4655),
                            Email = "user3@example.com",
                            FullName = "Lê Văn C",
                            Password = "hashed_password_here",
                            Phone = "0901234569",
                            Username = "user3"
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Huế",
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4657),
                            Email = "user4@example.com",
                            FullName = "Phạm Thị D",
                            Password = "hashed_password_here",
                            Phone = "0901234570",
                            Username = "user4"
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Nha Trang",
                            CreatedAt = new DateTime(2025, 4, 17, 11, 17, 58, 407, DateTimeKind.Local).AddTicks(4658),
                            Email = "user5@example.com",
                            FullName = "Hoàng Văn E",
                            Password = "hashed_password_here",
                            Phone = "0901234571",
                            Username = "user5"
                        });
                });

            modelBuilder.Entity("BookTour.Models.Booking", b =>
                {
                    b.HasOne("BookTour.Models.Tour", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookTour.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookTour.Models.BookingDetail", b =>
                {
                    b.HasOne("BookTour.Models.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("BookTour.Models.CustomTour", b =>
                {
                    b.HasOne("BookTour.Models.User", "User")
                        .WithMany("CustomTours")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookTour.Models.CustomTourDestination", b =>
                {
                    b.HasOne("BookTour.Models.CustomTour", "CustomTour")
                        .WithMany("CustomTourDestinations")
                        .HasForeignKey("CustomTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookTour.Models.Destination", "Destination")
                        .WithMany("CustomTourDestinations")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomTour");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("BookTour.Models.Destination", b =>
                {
                    b.HasOne("BookTour.Models.City", "City")
                        .WithMany("Destinations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BookTour.Models.DestinationDetail", b =>
                {
                    b.HasOne("BookTour.Models.Destination", "Destination")
                        .WithMany("DestinationDetails")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("BookTour.Models.DestinationImage", b =>
                {
                    b.HasOne("BookTour.Models.Destination", "Destination")
                        .WithMany("DestinationImages")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("BookTour.Models.Review", b =>
                {
                    b.HasOne("BookTour.Models.Tour", "Tour")
                        .WithMany("Reviews")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookTour.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookTour.Models.SavedTour", b =>
                {
                    b.HasOne("BookTour.Models.Tour", "Tour")
                        .WithMany("SavedTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookTour.Models.User", "User")
                        .WithMany("SavedTours")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookTour.Models.TourDestination", b =>
                {
                    b.HasOne("BookTour.Models.Destination", "Destination")
                        .WithMany("TourDestinations")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookTour.Models.Tour", "Tour")
                        .WithMany("TourDestinations")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("BookTour.Models.TourImage", b =>
                {
                    b.HasOne("BookTour.Models.Tour", "Tour")
                        .WithMany("TourImages")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("BookTour.Models.TourSchedule", b =>
                {
                    b.HasOne("BookTour.Models.Tour", "Tour")
                        .WithMany("TourSchedules")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("BookTour.Models.Booking", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("BookTour.Models.City", b =>
                {
                    b.Navigation("Destinations");
                });

            modelBuilder.Entity("BookTour.Models.CustomTour", b =>
                {
                    b.Navigation("CustomTourDestinations");
                });

            modelBuilder.Entity("BookTour.Models.Destination", b =>
                {
                    b.Navigation("CustomTourDestinations");

                    b.Navigation("DestinationDetails");

                    b.Navigation("DestinationImages");

                    b.Navigation("TourDestinations");
                });

            modelBuilder.Entity("BookTour.Models.Tour", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");

                    b.Navigation("SavedTours");

                    b.Navigation("TourDestinations");

                    b.Navigation("TourImages");

                    b.Navigation("TourSchedules");
                });

            modelBuilder.Entity("BookTour.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CustomTours");

                    b.Navigation("Reviews");

                    b.Navigation("SavedTours");
                });
#pragma warning restore 612, 618
        }
    }
}
